---
source: compiler-core/src/type_/tests/exhaustiveness.rs
assertion_line: 1085
expression: "\nimport mod.{Wibble}\nrecord Wibble { Wibble Wobble }\npub fn main() {\n  let wibble = mod.Wibble\n  case wibble {\n    mod.Wobble -> Nil\n  }\n}\n"
---
----- SOURCE CODE
-- mod.rakun
pub record Wibble { Wibble Wobble }

-- main.rakun

import mod.{Wibble}
record Wibble { Wibble Wobble }
pub fn main() {
  let wibble = mod.Wibble
  case wibble {
    mod.Wobble -> Nil
  }
}


----- ERROR
error: Inexhaustive patterns
  ┌─ /src/one/two.rakun:6:3
  │  
6 │ ╭   case wibble {
7 │ │     mod.Wobble -> Nil
8 │ │   }
  │ ╰───^

This case expression does not have a pattern for all possible values. If it
is run on one of the values without a pattern then it will crash.

The missing patterns are:

    mod.Wibble
