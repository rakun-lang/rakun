---
source: compiler-core/src/erlang/tests/functions.rs
assertion_line: 116
expression: "\nrecord A { A }\nrecord B { B }\nrecord C { C }\nrecord D { D }\n\nfn wibble(a a: A, b b: B, c c: C, d d: D) {\n  Nil\n}\n\npub fn main() {\n  wibble(A, C, D, b: B)\n  wibble(A, C, D, b: B)\n  wibble(B, C, D, a: A)\n  wibble(B, C, a: A, d: D)\n  wibble(B, C, d: D, a: A)\n  wibble(B, D, a: A, c: C)\n  wibble(B, D, c: C, a: A)\n  wibble(C, D, b: B, a: A)\n}\n"
---
----- SOURCE CODE

record A { A }
record B { B }
record C { C }
record D { D }

fn wibble(a a: A, b b: B, c c: C, d d: D) {
  Nil
}

pub fn main() {
  wibble(A, C, D, b: B)
  wibble(A, C, D, b: B)
  wibble(B, C, D, a: A)
  wibble(B, C, a: A, d: D)
  wibble(B, C, d: D, a: A)
  wibble(B, D, a: A, c: C)
  wibble(B, D, c: C, a: A)
  wibble(C, D, b: B, a: A)
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([main/0]).
-export_type([a/0, b/0, c/0, d/0]).

-type a() :: a.

-type b() :: b.

-type c() :: c.

-type d() :: d.

-file("/root/project/test/my/mod.rakun", 7).
-spec wibble(a(), b(), c(), d()) -> nil.
wibble(A, B, C, D) ->
    nil.

-file("/root/project/test/my/mod.rakun", 11).
-spec main() -> nil.
main() ->
    wibble(a, b, c, d),
    wibble(a, b, c, d),
    wibble(a, b, c, d),
    wibble(a, b, c, d),
    wibble(a, b, c, d),
    wibble(a, b, c, d),
    wibble(a, b, c, d),
    wibble(a, b, c, d).
