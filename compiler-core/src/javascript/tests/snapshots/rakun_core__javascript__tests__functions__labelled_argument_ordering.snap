---
source: compiler-core/src/javascript/tests/functions.rs
expression: "\nrecord A { A }\nrecord B { B }\nrecord C { C }\nrecord D { D }\n\nfn wibble(a a: A, b b: B, c c: C, d d: D) {\n  Nil\n}\n\npub fn main() {\n  wibble(A, C, D, b: B)\n  wibble(A, C, D, b: B)\n  wibble(B, C, D, a: A)\n  wibble(B, C, a: A, d: D)\n  wibble(B, C, d: D, a: A)\n  wibble(B, D, a: A, c: C)\n  wibble(B, D, c: C, a: A)\n  wibble(C, D, b: B, a: A)\n}\n"
---
----- SOURCE CODE

record A { A }
record B { B }
record C { C }
record D { D }

fn wibble(a a: A, b b: B, c c: C, d d: D) {
  Nil
}

pub fn main() {
  wibble(A, C, D, b: B)
  wibble(A, C, D, b: B)
  wibble(B, C, D, a: A)
  wibble(B, C, a: A, d: D)
  wibble(B, C, d: D, a: A)
  wibble(B, D, a: A, c: C)
  wibble(B, D, c: C, a: A)
  wibble(C, D, b: B, a: A)
}


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType } from "../rakun.mjs";

class A extends $CustomType {}

class B extends $CustomType {}

class C extends $CustomType {}

class D extends $CustomType {}

function wibble(a, b, c, d) {
  return undefined;
}

export function main() {
  wibble(new A(), new B(), new C(), new D());
  wibble(new A(), new B(), new C(), new D());
  wibble(new A(), new B(), new C(), new D());
  wibble(new A(), new B(), new C(), new D());
  wibble(new A(), new B(), new C(), new D());
  wibble(new A(), new B(), new C(), new D());
  wibble(new A(), new B(), new C(), new D());
  return wibble(new A(), new B(), new C(), new D());
}
